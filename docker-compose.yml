version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - app-networks

  mysqldb-user:
    container_name: mysqldb-user
    image: mysql:5.7
    cap_add:
      - SYS_NICE
    restart: always
    ports:
      - 3307:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE_USER}
    volumes:
      - dbdatauser:/var/lib/mysql
    networks:
      - app-networks
  
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app-networks

  user_service:
    container_name: library-user
    build:
      context: ./UserService
      dockerfile: Dockerfile
    image: richardoj/library-user:latest
    volumes:
      - ./config/firebase-config.json:/app/config/firebase-config.json
    restart: always
    depends_on:
      - rabbitmq
      - mysqldb-user
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - CONNECTION_STRING=${CONNECTIONSTRING_USER}
      - RABBITMQHOST=${RABBITMQHOST}
      - RABBITMQPORT=${RABBITMQPORT}
      - FIREBASE_CONFIG=${FIREBASE_CONFIG}
    networks:
      - app-networks
  
  catalog_service:
    build:
      context: ./CatalogNoSQL
      dockerfile: Dockerfile
    image: richardoj/library-catalog-nosql:latest
    restart: always
    depends_on:
      - rabbitmq
      - redis
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - CATALOGCONN_STRING=${CATALOGCONN_STRING}
      - CATALOGDB_NAME=${CATALOGDB_NAME}
      - CATALOGCOLL_NAME=${CATALOGCOLL_NAME}
      - RABBITMQHOST=${RABBITMQHOST}
      - RABBITMQPORT=${RABBITMQPORT}
      - BLOB_CONNECTION_STRING=${BLOB_CONNECTION_STRING}
      - REDIS_CON=${REDIS_CON}
    networks:
      - app-networks
  
  publish_service:
    build:
      context: ./PublishNoSQL
      dockerfile: Dockerfile
    image: richardoj/library-publish-nosql:latest
    restart: always
    depends_on:
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - PUBLISHCONN_STRING=${PUBLISHCONN_STRING}
      - PUBLISHDB_NAME=${PUBLISHDB_NAME}
      - PUBLISHCOLL_NAME=${PUBLISHCOLL_NAME}
      - RABBITMQHOST=${RABBITMQHOST}
      - RABBITMQPORT=${RABBITMQPORT}
      - BLOB_CONNECTION_STRING=${BLOB_CONNECTION_STRING}
    networks:
      - app-networks

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx:/etc/nginx/conf.d
    ports:
      - '8010:3000'
    networks:
      - app-networks
  
  prometheus:
    image: ubuntu/prometheus
    container_name: dev_prometheus
    ports:
      - "30090:9090"
    environment:
      - TZ=Europe/Copenhagen
    volumes:
      - ./prom/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-networks

  grafana:
    image: grafana/grafana
    container_name: dev_grafana
    ports:
      - "30091:3000"
    volumes:
      - ./grafana-data/data:/var/lib/grafana
    networks:
      - app-networks

volumes:
  dbdatauser:
  dbdatacatalog:
  dbdatapublish:
  datacatalog:
  datapublish:

networks:
  app-networks:

